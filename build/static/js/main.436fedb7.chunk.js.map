{"version":3,"sources":["services/athletes.js","components/Athletes.js","components/Workout.js","components/NewForm.js","components/WorkoutList.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","athleteId","delete","workoutId","Athletes","props","name","workouts","onClick","remove","Workout","onSubmit","add","onChange","nameChange","map","athlete","value","key","workout","workoutChange","type","date","dateChange","note","rows","cols","noteChange","NewForm","WorkoutList","change","style","textAlign","fontFamily","borderCollapse","borderBottom","width","paddingTop","paddingBottom","backgroundColor","color","_id","Date","toDateString","window","confirm","athleteService","removeWorkout","App","useState","athletes","setAthletes","newAthlete","setNewAthlete","newNote","setNewNote","setDate","workoutType","setWorkoutType","newName","setNewName","useEffect","initialAthletes","sort","compare","a","b","length","athleteNames","filter","listOfWorkouts","event","preventDefault","person","find","newWorkout","updatedList","console","log","target","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.436fedb7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/athletes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response =>response.data)\r\n}\r\n\r\nconst update = (athleteId, newObject) => {\r\n  const request = axios.post(`${baseUrl}/${athleteId}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removeAthlete = (athleteId) => axios.delete(`${baseUrl}/${athleteId}`)\r\n\r\nconst removeWorkout = (athleteId, workoutId) => axios.delete(`${baseUrl}/${athleteId}/workouts/${workoutId}`)\r\n\r\nexport default { getAll, create, update, removeAthlete, removeWorkout }","import React from 'react'\r\n\r\nconst Athletes = (props) => (\r\n    <tr>\r\n      <td>\r\n        {props.name} \r\n      </td>\r\n      <td>\r\n        {props.workouts}\r\n      </td>\r\n      <td>\r\n        <button onClick={props.remove}>delete athlete</button>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\nexport default Athletes","import React from 'react'\r\n\r\nconst Workout = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.add}>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Athlete: </td>\r\n            <td>\r\n              <select onChange={props.nameChange}>\r\n                {props.name.map(athlete => <option value={athlete} key={athlete}>{athlete}</option>)}\r\n              </select>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Workout: </td>\r\n            <td><input value={props.workout} onChange={props.workoutChange} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td>Date: </td>\r\n            <td><input type=\"date\" value={props.date} onChange={props.dateChange} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td>Notes:</td>\r\n            <td><textarea value={props.note} rows=\"10\" cols=\"30\" onChange={props.noteChange} /></td>\r\n          </tr>\r\n          <tr>\r\n            <td></td>\r\n            <td><button type=\"submit\">Save</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Workout","import React from 'react'\r\n\r\nconst NewForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.add}>\r\n        Name:\r\n        <input \r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        />\r\n        <button type=\"submit\">Add Athlete</button>\r\n      </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NewForm","import React from 'react'\r\nimport athleteService from '../services/athletes'\r\n\r\nconst WorkoutList = ({name, workouts, athleteId, change}) => {\r\n  const workoutListStyle = {\r\n    textAlign: 'center',\r\n    fontFamily: 'Trebuchet MS',\r\n    borderCollapse: 'collapse',\r\n    borderBottom: '3px solid #ddd',\r\n    width: '100%'\r\n  }\r\n\r\n  const removeWorkout = (athleteId, workoutId, type) => {\r\n    if (window.confirm(`Delete ${type} workout?`)) {\r\n      \r\n      athleteService\r\n        .removeWorkout(athleteId, workoutId)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={workoutListStyle}>\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th style={{paddingTop: '12px', paddingBottom: '12px', textAlign: 'center', backgroundColor: '#4CAF50', color: 'white' }}>\r\n            {name}\r\n          </th>\r\n        </tr>\r\n        {workouts.map(workout => {\r\n          return (\r\n            <tr key={workout._id}>\r\n              <td style={{textAlign: 'left'}}>{new Date(workout.date).toDateString()}</td>\r\n              <td>{workout.type}</td>\r\n              <td>{workout.note}</td>\r\n              <td><button onClick={() => removeWorkout(athleteId, workout._id, workout.type)}>Delete Workout</button></td>\r\n            </tr>\r\n            )\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default WorkoutList","import React, { useState, useEffect } from 'react'\r\nimport athleteService from './services/athletes'\r\nimport Athletes from './components/Athletes'\r\nimport Workout from './components/Workout'\r\nimport NewForm from './components/NewForm'\r\nimport WorkoutList from './components/WorkoutList'\r\n\r\nconst App = () => {\r\n  const [ athletes, setAthletes ] = useState([])\r\n  const [ newAthlete, setNewAthlete ] = useState('')\r\n  const [ newNote, setNewNote ] = useState('')\r\n  const [ date, setDate ] = useState('')\r\n  const [ workoutType, setWorkoutType ] = useState('')\r\n  const [ newName, setNewName ] = useState('')\r\n\r\n  useEffect(() => {\r\n    athleteService \r\n      .getAll()\r\n      .then(initialAthletes => setAthletes(initialAthletes.sort(compare)))\r\n  }, [])\r\n\r\n  // Add Athlete\r\n  const addAthlete = (event) => {\r\n    event.preventDefault()\r\n    const newList = {\r\n      name: newAthlete,\r\n\r\n    }\r\n    athleteService\r\n      .create(newList)\r\n      .then(updatedList => {\r\n        setAthletes(athletes.concat(updatedList))\r\n        setNewAthlete('')\r\n    })\r\n  }\r\n\r\n  // Remove Athlete\r\n  const removeAthlete = (athleteId, name) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      athleteService\r\n        .removeAthlete(athleteId)\r\n  \r\n      setAthletes(athletes.filter(athlete => athlete.athleteId !== athleteId).sort(compare))\r\n    }\r\n  }\r\n\r\n  // Add Workout\r\n  const addWorkout = (event) => {\r\n    event.preventDefault()\r\n    const person = athletes.find(athlete => athlete.name === newName)\r\n    const newWorkout = \r\n      {\r\n        type: workoutType,\r\n        date: date,\r\n        note: newNote,\r\n    }\r\n\r\n    athleteService\r\n      .update(person.athleteId, newWorkout)\r\n      .then(updatedList => \r\n        console.log(updatedList))\r\n        setNewNote('')\r\n        setDate('')\r\n        setWorkoutType('')\r\n        setNewName('')\r\n  }\r\n\r\n  const compare = (a, b) => {\r\n    let comparison = 0\r\n    if (a.workouts.length < b.workouts.length) {\r\n      comparison = 1\r\n    } else if (a.workouts.length === b.workouts.length) {\r\n      comparison = 0 }\r\n      else {\r\n      comparison = -1\r\n    }\r\n    return comparison\r\n  }\r\n\r\n  const athleteNames = athletes.map(athlete => \r\n    <Athletes \r\n      name={athlete.name}\r\n      workouts={athlete.workouts.length}\r\n      key={athlete.athleteId}\r\n      remove={() => removeAthlete(athlete.athleteId, athlete.name)}\r\n      />\r\n    )\r\n\r\n  const listOfWorkouts = athletes.map(athlete => \r\n    <WorkoutList\r\n      key={athlete.athleteId}\r\n      name={athlete.name}\r\n      workouts={athlete.workouts}\r\n      athleteId={athlete.athleteId}\r\n      />\r\n    )\r\n\r\n  const handleAddAthlete = (event) => setNewAthlete(event.target.value)\r\n  const handleNewNote = (event) => setNewNote(event.target.value)\r\n  const handleWorkoutChange = (event) => setWorkoutType(event.target.value)\r\n  const handleDateChange = (event) => setDate(event.target.value)\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n\r\n  return (\r\n  <div>\r\n    <h1>Folkes träningsdagbok</h1>\r\n    <table>\r\n      <tbody>\r\n        {athleteNames}\r\n      </tbody>\r\n    </table>\r\n    <Workout \r\n      add={addWorkout}\r\n      note={newNote}\r\n      noteChange={handleNewNote}\r\n      workout={workoutType}\r\n      workoutChange={handleWorkoutChange}\r\n      date={date}\r\n      dateChange={handleDateChange}\r\n      name={athletes.map(athlete => athlete.name)}\r\n      nameChange={handleNameChange}\r\n    />\r\n    <NewForm\r\n      add={addAthlete}\r\n      value={newAthlete}\r\n      onChange={handleAddAthlete}\r\n      /> \r\n    {listOfWorkouts}\r\n  </div>\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}